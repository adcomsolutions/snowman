extends:
  - standard
  - prettier
  - prettier/standard
  - plugin:functional/recommended

parserOptions:
  sourceType: module

reportUnusedDisableDirectives: true

globals:
  g_form: readonly
  GlideRecord: readonly

plugins:
  - eslint-comments
  - functional
  - unicorn
  - html

rules:
  ## Allow self comparisons with warning
  no-self-compare: 1
  ## Globals
  node/prefer-global/console: 2
  node/prefer-global/url-search-params: 2
  node/prefer-global/text-decoder: 2
  node/prefer-global/text-encoder: 2
  node/prefer-global/url: 2
  ## We only use globals for globals also defined in the browser
  node/prefer-global/buffer:
    - 2
    - never
  node/prefer-global/process:
    - 2
    - never

  ## Comments
  multiline-comment-style:
    - 2
    - separate-lines

  ## ESLint comments
  eslint-comments/disable-enable-pair: 2
  eslint-comments/no-unused-enable: 2
  eslint-comments/no-unused-disable: 2
  eslint-comments/no-duplicate-disable: 2
  eslint-comments/no-unlimited-disable: 2
  eslint-comments/no-aggregating-enable: 2
  eslint-comments/no-use:
    - 2
    - allow:
        - eslint-disable-next-line
        - eslint-disable-line
        - eslint-disable
        - eslint-enable
        - eslint-env
  unicorn/no-abusive-eslint-disable: 2

  ## Strictness
  strict: 2

  ## Blank lines
  padding-line-between-statements:
    - 2
    - blankLine: always
      prev: [multiline-block-like, directive]
      next: '*'
    - blankLine: always
      prev: '*'
      next: multiline-block-like

  ## Statements
  no-empty:
    - 2
    - allowEmptyCatch: true

  ## Complexity
  max-len:
    - 2
    - code: 80
      tabWidth: 4
      ignoreUrls: true
      ignoreStrings: true
      ignoreTemplateLiterals: true
      ignoreRegExpLiterals: true
      ignorePattern: eslint-disable
  max-lines:
    - 2
    - max: 90
      skipBlankLines: true
      skipComments: true
  max-lines-per-function:
    - 2
    - max: 50
      skipBlankLines: true
      skipComments: true
      IIFEs: true
  max-statements:
    - 2
    - 10
  max-statements-per-line:
    - 2
    - max: 2
  import/max-dependencies: 2
  complexity:
    - 2
    - 4
  max-depth:
    - 2
    - 1
  max-nested-callbacks:
    - 2
    - 1

  ## Referencing
  unicorn/no-unused-properties: 2
  no-shadow:
    - 2
    - builtinGlobals: true
      hoist: all
      allow:
        - process
        - Buffer
        - URL

  ## Declarations
  block-scoped-var: 2
  no-var: 2
  import/no-mutable-exports: 2
  no-implicit-globals: 2
  vars-on-top: 2
  sort-vars: 2
  no-magic-numbers:
    - 2
    - ignore: [-2, -1, 0, 1, 2, 3, 10]
      enforceConst: true

  ## Assignments
  init-declarations: 2
  no-plusplus: 2
  operator-assignment: 2
  no-multi-assign: 2
  prefer-object-spread: 2
  no-param-reassign:
    - 2
    - props: true
  import/no-unassigned-import: 2

  ## Naming
  id-length:
    - 2
    - max: 24
      exceptions:
        # ava requires `test` to be called `t` for `power-assert` to work
        - t
        # Returned by yargs
        - _
  id-match:
    - 2
    - ^[A-Za-z0-9_]+$
    - onlyDeclarations: true
  no-underscore-dangle:
    - 2
    - enforceInMethodNames: true
      # Often used in several libraries
      allow: [_id]

  ## Typecasting
  no-implicit-coercion: 2
  unicorn/explicit-length-check:
    - 2
    - non-zero: not-equal
  unicorn/new-for-builtins: 2

  ## Tests
  no-unsafe-negation:
    - 2
    - enforceForOrderingRelations: true
  unicorn/no-array-instanceof: 2
  no-negated-condition: 2
  no-nested-ternary: 2

  ## Structures
  no-lonely-if: 2
  no-else-return:
    - 2
    - allowElseIf: false
  for-direction: 2
  unicorn/no-for-loop: 2
  guard-for-in: 2

  ## Switch
  no-restricted-syntax:
    - 2
    - SwitchStatement
    # This is added by eslint-config-prettier, so we keep it
    - selector: SequenceExpression
      message:
        The comma operator is confusing and a common mistake. Donâ€™t use it!
  default-case: 2

  ## Labels
  no-unused-labels: 2
  no-extra-label: 2
  no-label-var: 2

  ## Exceptions
  unicorn/throw-new-error: 2
  unicorn/error-message: 2
  unicorn/catch-error-name: 2
  unicorn/prefer-type-error: 2
  unicorn/custom-error-definition: 2

  ## Functions
  functional/no-expression-statement : 1
  functional/functional-parameters :
    - 1
    - allowRestParameter: true
  func-style: 2
  no-loop-func: 2
  func-names:
    - 2
    - as-needed
  func-name-matching:
    - 2
    - considerPropertyDescriptor: true
  default-param-last: 2
  prefer-spread: 2
  unicorn/prefer-spread: 2
  prefer-rest-params: 2
  require-yield: 2
  getter-return: 2
  no-empty-function: 2
  unicorn/consistent-function-scoping: 2
  unicorn/prefer-reflect-apply: 2

  ## Objects
  object-shorthand: 2
  prefer-destructuring: 2

  ## Inheritance
  no-invalid-this: 2
  class-methods-use-this: 2
  consistent-this: 2
  max-classes-per-file: 0

  ## Arrays
  array-callback-return: 2
  unicorn/prefer-includes: 2

  ## String
  no-useless-concat: 2
  prefer-template: 2
  unicorn/prefer-starts-ends-with: 2
  unicorn/prefer-string-slice: 2
  unicorn/no-hex-escape: 2
  unicorn/escape-case: 2
  unicorn/no-console-spaces: 2

  ## RegExps
  unicorn/regex-shorthand: 2
  prefer-regex-literals: 2
  require-unicode-regexp: 2

  ## Number
  unicorn/no-zero-fractions: 2
  prefer-numeric-literals: 2
  radix:
    - 2
    - as-needed
  use-isnan:
    - 2
    - enforceForSwitchCase: true
      enforceForIndexOf: true
  unicorn/prefer-exponentiation-operator: 2
  no-bitwise: 2

  ## Async
  callback-return: 2
  node/no-callback-literal: 2
  require-await: 2
  no-await-in-loop: 2
  require-atomic-updates: 2
  no-sync: 2
  promise/catch-or-return: 2
  promise/always-return: 2
  promise/valid-params: 2
  promise/no-new-statics: 2
  promise/no-return-wrap: 2
  promise/no-return-in-finally: 2
  promise/no-nesting: 2
  promise/no-promise-in-callback: 2
  promise/no-callback-in-promise: 2
  promise/avoid-new: 2
  promise/prefer-await-to-then: 2
  promise/prefer-await-to-callbacks: 2

  ## Modules
  import/no-unresolved:
    - 2
    - commonjs: true
  node/no-missing-require: 2
  node/no-unpublished-require: 2
  node/no-missing-import: 2
  node/no-unpublished-import: 2
  import/named: 2
  import/namespace:
    - 2
    - allowComputed: true
  import/no-named-as-default: 2
  import/no-named-as-default-member: 2
  import/no-namespace: 2
  import/no-named-default: 2
  import/no-anonymous-default-export: 2
  import/no-default-export: 2
  node/exports-style:
    - 2
    - module.exports
  node/no-exports-assign: 2
  no-import-assign: 2
  import/extensions:
    - 2
    - always
    - ignorePackages: true
  node/file-extension-in-import: 2
  import/no-useless-path-segments: 2
  no-duplicate-imports:
    - 2
    - includeExports: true
  import/no-self-import: 2
  import/no-cycle:
    - 2
    - commonjs: true
  import/no-extraneous-dependencies:
    - 2
    - devDependencies: [test/**, gulp/**, benchmarks/**, gulpfile.js]
  node/no-extraneous-require: 2
  node/no-extraneous-import: 2
  sort-imports:
    - 2
    - ignoreMemberSort: true
      ignoreDeclarationSort: true
  no-mixed-requires: 2
  import/order:
    - 2
    - newlines-between: always
  import/newline-after-import: 2
  import/unambiguous: 2
  global-require: 2
  import/no-dynamic-require: 2
  import/no-commonjs: 2
  import/no-amd: 2
  import/no-deprecated: 2

  ## Binary
  node/no-unpublished-bin: 2

  ## Blacklist
  ## Avoid Node.js-specific global variables
  no-restricted-globals:
    - 2
    ## No global variables
    - global
    - GLOBAL
    ## Use console wrapper instead
    - console
    ## Use module.exports instead
    - exports
    ## Use require('process|buffer') instead
    - process
    - Buffer
  # Prefer `if` + `throw new Error()` instead of `assert()` as it does not
  # work in browsers
  no-restricted-imports:
    - 2
    - paths: [assert]
  no-restricted-modules:
    - 2
    - paths: [assert]

  ## To avoid
  no-continue: 2
  no-console: 2
  no-buffer-constructor: 2
  unicorn/no-new-buffer: 2
  no-process-env: 2
  no-script-url: 2
  no-alert: 2
  unicorn/prefer-add-event-listener: 2
  no-process-exit: 2
  unicorn/no-process-exit: 2

  ## DOM
  unicorn/prefer-query-selector: 2
  unicorn/prefer-node-append: 2
  unicorn/prefer-node-remove: 2
  unicorn/prefer-text-content: 2
  unicorn/prefer-event-key: 2
  unicorn/prefer-dataset: 2

  ## Differences from standard/standard

  ## standard/standard does not check arguments for unused-vars
  no-unused-vars:
    - 2
    - {}
  ## standard/standard does not check `typeof`
  no-undef:
    - 2
    - typeof: true

  no-undefined: 2
  consistent-return: 2

## This rule should be turned on in the future

#  valid-jsdoc: 2
#  require-jsdoc:
#  - 2
#  - require:
#      FunctionDeclaration: true
#      MethodDefinition: true
#      ClassDeclaration: true

## This rule is too unstable for the moment:
##   https://github.com/sindresorhus/eslint-plugin-unicorn/issues/269
##   https://github.com/sindresorhus/eslint-plugin-unicorn/issues/270

## Do not use Power assert directly

#  ava/prefer-power-assert: 2

## Test titles do not follow any format

# ava/test-title-format: 2

settings:
  # JSON files in `build` are compiled from YAML in `src` and `test`
  node:
    tryExtensions: [.js, .json, .node, .yml, .yaml]
  import/resolver:
    node:
      extensions: [.js, .json, .node, .yml, .yaml]

overrides:
  # Ignore the gulpfile
  - files: [gulpfile.babel.js]
    rules:
      unicorn/no-abusive-eslint-disable: 0
      eslint-comments/disable-enable-pair: 0
      eslint-comments/no-unlimited-disable: 0
  # Stricter FP conventions in shared libraries
  - files: [src/shared/**/*.js]
    rules:
      functional/no-expression-statement : 2
      functional/functional-parameters : 2
  # File specific globals
  - files: [src/**/*.xml]
    globals:
      $: writeable
      ref: readonly
  - files: [src/shared/businessrule.js]
    globals:
      current: readonly
      previous: readonly

  # Workarounds to make linting more JellyScript friendly
  - files: [src/**/*.xml]
    rules:
      import/unambiguous: 0
      no-template-curly-in-string: 0
      vars-on-top: 0
      no-unused-vars: 1

  # Make an allowance for mutability in the dom shared library
  - files: [src/shared/dom.js]
    rules:
      functional/immutable-data: 1
      functional/no-expression-statement : 1
      no-param-reassign: 1
  # Make an allowance for interacting with undefineds in script helper libraries
  - files: [src/shared/clientscript.js, src/shared/businessrule.js]
    rules:
      functional/no-expression-statement : 0
      no-undef: 0

  # Test files
  - files: [test/**/*.js]
    rules:
      # When using data-driven testing, an extra level of depth is implied
      max-nested-callbacks:
        - 2
        - 2
      max-lines-per-function: 0
